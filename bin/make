#!/usr/bin/env bash
ROOT_PATH=$(cd "$(dirname "$0")"; cd ../;pwd)
RED='\033[0;31m'
GREEN='\033[0;32m'
NO_COLOR='\033[0m'

function run_one() {
  exe=$1
  test=$2
  echo -n "Running $test, $3 ..."

  pushd ${ROOT_PATH}/tests/$test > /dev/null
  R="./test.sh $exe"

  # run
  $R > test.result

  if [[ 0 -eq $? ]]; then
    echo -e "${GREEN} Passed${NO_COLOR}"
  else
    echo -e "${RED} Failed $2. Aborting.${NO_COLOR}"
    exit 1
  fi
  popd > /dev/null
}

function build_all() {
  [[ -d classes ]] || mkdir classes;
  javac -s ${ROOT_PATH}/src -d ${ROOT_PATH}/classes -encoding utf8 -source 1.8 -target 1.8 ${ROOT_PATH}/src/*;
  [[ -d test-classes ]] || mkdir test-classes;
  javac -cp ${ROOT_PATH}/classes -s ${ROOT_PATH}/test -d ${ROOT_PATH}/test-classes -encoding utf8 -source 1.8 -target 1.8 ${ROOT_PATH}/test/*;
}

function test() {
  export EXE=${ROOT_PATH}/bin/run
  run_one $EXE basic "basic retur 1"
  run_one $EXE sum10 "sum10 with loop"
  run_one $EXE constants "constants instructions"
  run_one $EXE load_store "load & store instructions"
  run_one $EXE math "math instructions"
  run_one $EXE comparisons "comparions instructions"
  run_one $EXE static_call "static call"
  run_one $EXE native_call "native call"
  run_one $EXE class_init "class init"
  run_one $EXE static_field "static field"
  run_one $EXE object_init "object init"
  run_one $EXE object_field "object field"
  run_one $EXE object_override "object override"
  run_one $EXE interface_override "interface override"
  run_one $EXE interface_init "interface init"
  run_one $EXE instance_array "instance array"
  run_one $EXE primitive_array "primitive array"
  run_one $EXE hello "hello"
  run_one $EXE npe "null pointer exception"
}

function clean() {
  rm -rf ${ROOT_PATH}/classes
  rm -rf ${ROOT_PATH}/test-classes
  rm -rf ${ROOT_PATH}/target
  rm -rf ${ROOT_PATH}/tests/*/*.result
}

function run_test() {
  java -cp ${ROOT_PATH}/classes:${ROOT_PATH}/test-classes TestMain $*
}

# main process
cmd=help
if [[ $# -gt 0 ]]; then
  cmd=$1;
  shift
fi

case $cmd in
  help)
    echo "Usage:all|build|build-all|run|run-test|test|test-all"
    ;;
  clean)
    clean
    ;;
  build)
    [[ -d classes ]] || mkdir classes;
    javac -s ${ROOT_PATH}/src -d ${ROOT_PATH}/classes -encoding utf8 -source 1.8 -target 1.8 ${ROOT_PATH}/src/*;
    ;;
  build-all)
    build_all
    ;;
  test)
    test
    ;;
  run)
    java -cp ${ROOT_PATH}/classes Main $*
    ;;
  run-test)
    run_test $*
    ;;
  test-all)
    run_test 
    test
    ;;
  all)
    clean && build_all && run_test && echo "" && test
    ;;
  *)
    echo "Usage:all|build|build-all|run|run-test|test|test-all"
    ;;
esac
